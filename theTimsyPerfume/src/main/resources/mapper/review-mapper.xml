<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reviewMapper">

<resultMap type="review" id="reviewResultSet">
	<result column="review_no" property="reviewNo"/>
	<result column="nickname" property="userNo"/>
	<result column="review_score" property="reviewScore"/>
	<result column="review_content" property="reviewContent"/>
	<result column="review_create_date" property="reviewCreateDate"/>
	<result column="review_modify_date" property="reviewModifyDate"/>
	<result column="review_state" property="reviewState"/>
	<result column="PDT_NAME" property="pdtNo"/>
	
	<result column="USER_PROFILE" property="userProfile"/>
	<result column="thumbnail_path" property="thumbnail"/>
	<result column="product_path" property="productImg"/>
	<result column="PDT_PRICE" property="productPrice"/>
</resultMap>

<resultMap type="comment" id="commentResultSet">
	<result column="COMMENT_NO" property="commentNo"/>
	<result column="nickname" property="userNo"/>
	<result column="BOARD_NO" property="boardNo"/>
	<result column="REVIEW_NO" property="reviewNo"/>
	<result column="COMMENT_CONTENT" property="commentContent"/>
	<result column="COMMENT_CREATE_DATE" property="commentCreateDate"/>
	<result column="COMMENT_MODIFY_DATE" property="commentModifyDate"/>
	<result column="COMMENT_GROUP" property="commentGroup"/>
	<result column="COMMENT_INDEX" property="commentIndex"/>
	<result column="COMMENT_DEPTH" property="commentDepth"/>
	<result column="COMMENT_STATE" property="commentState"/>
	<result column="GROUP_COUNT" property="groupCount"/>
</resultMap>

<select id="countReviewList" resultType="_int">
select
	count(*)
from
	tb_review
where
	review_state = 'Y'
</select>
<select id="seletcReviewList" parameterType="review" resultMap="reviewResultSet">
SELECT
    REVIEW_NO,
    NICKNAME,
    REVIEW_SCORE,
    REVIEW_CONTENT,
    TO_CHAR(REVIEW_CREATE_DATE,'YYYY-MM-dd HH24:mm') "REVIEW_CREATE_DATE",
    REVIEW_MODIFY_DATE,
    PDT_NAME,
    USER_PROFILE,
    REVIEW_FILE_PATH||'/'||REVIEW_FILE_UPLOAD "thumbnail_path",
    PDT_FILE_PATH||'/'||PDT_FILE_UPLOAD "product_path",
    TO_CHAR(PDT_PRICE,'L99,999') "PDT_PRICE"
FROM TB_REVIEW
    JOIN TB_USER USING(USER_NO)
    JOIN TB_PRODUCT USING(PDT_NO)
    JOIN TB_REVIEW_FILE USING(REVIEW_NO)
    JOIN TB_PRODUCT_FILE USING(PDT_NO)
WHERE
	REVIEW_FILE_INDEX = 0
AND
	PDT_FILE_INDEX = 0
</select>
<select id="selectReviewDetail" parameterType="_int" resultMap="reviewResultSet">
SELECT
    REVIEW_NO,
    NICKNAME,
    REVIEW_SCORE,
    REVIEW_CONTENT,
    TO_CHAR(REVIEW_CREATE_DATE,'YYYY-MM-dd HH24:mm') "REVIEW_CREATE_DATE",
    REVIEW_MODIFY_DATE,
    PDT_NAME,
    USER_PROFILE,
    PDT_FILE_PATH||'/'||PDT_FILE_UPLOAD "product_path",
    TO_CHAR(PDT_PRICE,'L99,999') "PDT_PRICE"
FROM TB_REVIEW
    JOIN TB_USER USING(USER_NO)
    JOIN TB_PRODUCT USING(PDT_NO)
    JOIN TB_PRODUCT_FILE USING(PDT_NO)
WHERE
	REVIEW_NO = #{reviewNo}
AND
	PDT_FILE_INDEX = 0
</select>
<select id="selectReviewImage" parameterType="_int" resultType="string">
SELECT
    REVIEW_FILE_PATH||'/'||REVIEW_FILE_UPLOAD "image_path"
FROM
    TB_REVIEW_FILE
WHERE
    REVIEW_NO = #{reviewNo}
</select>
<select id="selectCommentList" parameterType="map" resultMap="commentResultSet">
SELECT
    COMMENT_NO,
    NICKNAME,
    COMMENT_CONTENT,
    TO_CHAR(COMMENT_CREATE_DATE,'YYYY-MM-dd HH24:mm') "COMMENT_CREATE_DATE",
    COMMENT_GROUP,
    COMMENT_INDEX,
    COMMENT_DEPTH,
    COUNT(*) OVER(PARTITION BY COMMENT_GROUP)"GROUP_COUNT"
FROM
    TB_COMMENT
JOIN TB_USER USING(USER_NO)
WHERE
    <choose>
	<when test='boardNo != 0'>
		BOARD_NO=#{boardNo}
	</when>
	<otherwise>
		REVIEW_NO=#{reviewNo}
	</otherwise>
	</choose>
	<if test="commentGroup != 0">
	AND COMMENT_GROUP = #{commentGroup}
	AND COMMENT_NO != #{commentGroup}
	</if>
ORDER BY
    COMMENT_GROUP DESC, COMMENT_INDEX
</select>
<update id="increaseCommentIndex" parameterType="_int">
UPDATE TB_COMMENT SET COMMENT_INDEX=COMMENT_INDEX+1 WHERE COMMENT_GROUP = #{commentGroup} AND COMMENT_GROUP != COMMENT_NO
</update>
<insert id="insertComment" parameterType="comment">
INSERT INTO TB_COMMENT(
    COMMENT_NO,
    USER_NO,
    <choose>
	<when test='boardNo != 0'>
		BOARD_NO,
	</when>
	<otherwise>
		REVIEW_NO,
	</otherwise>
	</choose>
    COMMENT_CONTENT,
    COMMENT_GROUP,
    COMMENT_INDEX,
    COMMENT_DEPTH
) VALUES (
    SEQ_COMMENT.NEXTVAL,
    #{userNo},
    <choose>
	<when test='boardNo != 0'>
		#{boardNo},
	</when>
	<otherwise>
		#{reviewNo},
	</otherwise>
	</choose>
    #{commentContent},
    <choose>
	<when test='commentGroup == 0'>
		SEQ_COMMENT.CURRVAL,
		0,
	</when>
	<otherwise>
		#{commentGroup},
		1,
	</otherwise>
	</choose>
    #{commentDepth}
)
</insert>
<select id="selectRecommend" parameterType="recommend" resultType="string">
SELECT
    REVIEW_LIKE_FLAG
FROM TB_REVIEW_LIKE
WHERE
    USER_NO = #{userNo}
AND
    REVIEW_NO = #{contentNo}
</select>
<update id="updateRecommend" parameterType="recommend">
UPDATE
    TB_REVIEW_LIKE
SET REVIEW_LIKE_FLAG = #{likeFlag}
WHERE
    USER_NO = #{userNo}
AND
    REVIEW_NO = #{contentNo}
</update>
<insert id="insertRecommend" parameterType="recommend">
INSERT INTO TB_REVIEW_LIKE(
    USER_NO,
    REVIEW_NO,
    REVIEW_LIKE_FLAG
) VALUES (
	#{userNo},
	#{contentNo},
	#{likeFlag}
)
</insert>
<select id="countRecommend" parameterType="_int" resultType="recommend">
SELECT
    TO_CHAR(COUNT(CASE WHEN REVIEW_LIKE_FLAG='L' THEN 1 END),'FM999,999,999') likeCount,
    TO_CHAR(COUNT(CASE WHEN REVIEW_LIKE_FLAG='D' THEN 1 END),'FM999,999,999') dislikeCount
FROM TB_REVIEW_LIKE
WHERE
    REVIEW_NO = #{contentNo}
</select>
</mapper>