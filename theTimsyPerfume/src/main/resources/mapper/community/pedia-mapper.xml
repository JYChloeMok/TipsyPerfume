<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pediaMapper">

<resultMap type="pedia" id="pediaResultSet">
	<result column="PDT_NO" property="pdtNo"/>
	<result column="PDT_NAME" property="pdtName"/>
	<result column="PDT_IMAGE" property="pdtImage"/>
	<result column="PDT_PRICE" property="pdtPrice"/>
	<result column="PDT_STOCK" property="pdtStock"/>
	<result column="PDT_INTRO" property="pdtIntro"/>
	<result column="PDT_DESCRIPTION" property="pdtDescription"/>
	<result column="USER_BUY" property="userBuy"/>
	<result column="TOTAL_PRICE" property="totalPrice"/>
	<result column="TOTAL_REVIEW" property="totalReview"/>
	<result column="USER_REVIEW" property="userReview"/>
</resultMap>

<select id="selectPediaList" parameterType="map" resultMap="pediaResultSet">
SELECT
	PDT_NO,
	PDT_FILE_PATH||'/'||PDT_FILE_UPLOAD "PDT_IMAGE",
	NVL(USER_BUY,0) "USER_BUY",
    NVL(TOTAL_PRICE,0) "TOTAL_PRICE"
FROM TB_PRODUCT
	JOIN TB_PRODUCT_FILE USING(PDT_NO)
	JOIN TB_PRODUCT_CATEGORY USING(PDT_CATEG_NO)
    LEFT JOIN (
        SELECT 
            PDT_NO,
            TO_CHAR(SUM(ORDER_QUANTITY),'FM999,999,999') "USER_BUY",
            TO_CHAR(SUM(PDT_OPTION_PRICE * ORDER_QUANTITY),'L999,999,999') "TOTAL_PRICE"
        FROM TB_ORDER_DETAIL
            JOIN TB_ORDER_PRODUCT USING(ORDER_DETAIL_NO)
            JOIN TB_PRODUCT_OPTION USING(PDT_OPTION_NO)
            JOIN TB_PRODUCT USING(PDT_NO)
            JOIN TB_PRODUCT_CATEGORY USING(PDT_CATEG_NO)
            JOIN TB_ORDER USING(ORDER_NO)
        GROUP BY USER_NO, PDT_NO, PDT_NAME, PDT_CTEG
        HAVING USER_NO = #{userNo} AND PDT_CTEG=#{pdtCteg}
        ORDER BY PDT_NO
    ) USING(PDT_NO)
WHERE
	PDT_CTEG=#{pdtCteg}
</select>
<select id="selectPediaInfo" parameterType="map" resultMap="pediaResultSet">
SELECT
    PDT_NO,
    PDT_NAME,
    TO_CHAR(PDT_OPTION_PRICE,'L999,999,999') "PDT_PRICE",
    TO_CHAR(PDT_OPTION_STOCK,'FM999,999,999') "PDT_STOCK",
    PDT_INTRO,
    PDT_DESCRIPTION,
    PDT_INGREDIENT,
    PDT_FILE_PATH||'/'||PDT_FILE_UPLOAD "PDT_IMAGE",
    NVL(TOTAL_REVIEW,0) "TOTAL_REVIEW",
    NVL(USER_REVIEW,0) "USER_REVIEW",
    NVL(USER_BUY,0) "USER_BUY",
    NVL(TOTAL_PRICE,0) "TOTAL_PRICE"
FROM TB_PRODUCT
    JOIN TB_PRODUCT_FILE USING(PDT_NO)
    JOIN TB_PRODUCT_OPTION USING(PDT_NO)
    LEFT JOIN (
        SELECT
            PDT_NO,
            TO_CHAR(COUNT(*),'FM999,999,999') "TOTAL_REVIEW",
            TO_CHAR(COUNT(CASE WHEN USER_NO=#{userNo} THEN 1 END),'FM999,999,999') "USER_REVIEW"
        FROM TB_REVIEW
        JOIN TB_PRODUCT_OPTION USING(PDT_OPTION_NO)
        GROUP BY PDT_NO
        HAVING PDT_NO = #{pdtNo}
    ) USING(PDT_NO)
    LEFT JOIN (
        SELECT 
            PDT_NO,
            TO_CHAR(SUM(ORDER_QUANTITY),'FM999,999,999') "USER_BUY",
            TO_CHAR(SUM(PDT_OPTION_PRICE * ORDER_QUANTITY),'L999,999,999') "TOTAL_PRICE"
        FROM TB_ORDER_DETAIL
            JOIN TB_ORDER_PRODUCT USING(ORDER_DETAIL_NO)
            JOIN TB_PRODUCT_OPTION USING(PDT_OPTION_NO)
            JOIN TB_PRODUCT USING(PDT_NO)
            JOIN TB_PRODUCT_CATEGORY USING(PDT_CATEG_NO)
            JOIN TB_ORDER USING(ORDER_NO)
        GROUP BY USER_NO, PDT_NO, PDT_NAME, PDT_CTEG
        HAVING USER_NO = #{userNo} AND PDT_NO=#{pdtNo}
        ORDER BY PDT_NO
    ) USING(PDT_NO)
WHERE
    PDT_NO=#{pdtNo}
AND ROWNUM = 1
</select>
</mapper>